var connect = require('connect'),	colors = require('colors'),	argv = require('optimist').argv,	portfinder = require('portfinder');	formidable = require('formidable'),    util = require('util'),    fs   = require('fs-extra');var port = argv.p,	logger = argv.l,	log = console.log;/* Find port */if (!argv.p) {	portfinder.basePort = 8080;	portfinder.getPort(function (err, port) {	if (err) throw err;	listen(port);	});} else {	listen(port);}function listen(port) {	var app = connect()    //create web server	//.use(connect.bodyParser())      // had to comment it to work with formidable module	.use(connect.static('public'))   //read static folder inculded index.html	.use(function (req, res) {  	    //when user click on upload send request for process route     	    if (req.url === '/process' && req.method.toLowerCase() == 'post') {			  var form = new formidable.IncomingForm();              form.parse(req, function(err, fields, files) {                //res.end(util.inspect({fields: fields, files: files}));                //res.end(JSON.stringify({ message: 'Okay' }));               });                form.on('progress', function(bytesReceived, bytesExpected) {                  var percent_complete = (bytesReceived / bytesExpected) * 100;                  console.log(percent_complete.toFixed(2));               });                form.on('error', function(err) {                   console.error(err);               });                form.on('end', function(fields, files) {               	   //res.end(JSON.stringify({ message: 'NotOkay' }));                   /* Temporary location of our uploaded file */                   var temp_path = this.openedFiles[0].path;                  /* The file name of the uploaded file */                   var file_name = this.openedFiles[0].name;                  /* Location where we want to copy the uploaded file */                   var new_location = './public/';                    fs.copy(temp_path, new_location + file_name, function(err) {                          if (err) {                          console.error(err);                        } else {                           console.log("success!")                           res.end(JSON.stringify({ file_name: file_name }));                                                  }                  });                                });                 }	})	.listen(port);				log('Starting up Server, serving '.yellow		+ __dirname.green		+ ' on port: '.yellow		+ port.toString().cyan);	log('Hit CTRL-C to stop the server');	}	 	process.on('SIGINT', function () {	log('http-server stopped.'.red);	process.exit();});